version: '3'
    
services:

  web:
    build: ./app

    #user: ceomuser

    command: bash -c "python manage.py makemigrations &&
                      python manage.py migrate --noinput -v 1 && 
                      echo MIGRATE_FIN &&
                      python manage.py check &&
                      echo CHECK_FIN &&
                      python manage.py collectstatic --noinput &&
                      echo COLLECTSTATIC_FIN &&
                      python manage.py compilemessages &&
                      gunicorn ceom.wsgi:application --bind 0.0.0.0:8000"
                      
                      #tail -F anything"
                      #gunicorn ceom.wsgi:application --bind 0.0.0.0:8000"
                      #python manage.py runserver 0.0.0.0:8000"

                      #python manage.py makemigrations outreach &&
                      #python manage.py makemigrations --empty pages &&
                      
                      #python manage.py makemessages --all &&
                      #echo MAKE_MESSAGE_FIN &&

    #TODO: Remove the volume connection in production. There should be no connection between the container and machine in production to avoid attacks on the base machine.
    volumes:
      - ./app:/code
    expose:
      - 8000
      - 587
      - 25
    env_file:
      - ./.env
    depends_on:
      - db
#      - redis



  db:
    image: postgis/postgis

    #user: ceomuser

    volumes:
      - /data/web/ceom/postgres:/var/lib/postgresql/data

    env_file:
      - ./.env.db
  



  nginx:
    build:
      context: .
      dockerfile: ./nginx/Dockerfile

    #TODO: Figure out how to avoid containers running as root
    #user: ceomuser

    #TODO: Nginx NEEDS this link to the active files because media files are added during runtime, after docker's copy command. Thus the container doesn't have the new media files.
    volumes: 
      - .:/code

    ports:
      - 25:25
      - 80:80
      - 587:587

    depends_on:
      - web


#  redis:
#    image: redis:alpine
#
#
#
#  celery:
#    build: ./app
#    command: celery -A ceom worker -l info
#    volumes:
#      - ./app/:/code/
#    
#    #Env variables may be needed here?
#
#    depends_on:
#      - redis
