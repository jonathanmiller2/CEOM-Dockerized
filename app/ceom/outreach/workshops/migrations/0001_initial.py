# Generated by Django 2.2.13 on 2020-08-05 20:18

from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('link', models.CharField(max_length=300)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
            options={
                'unique_together': {('name',)},
            },
        ),
        migrations.CreateModel(
            name='Sponsor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('logo', models.FileField(max_length=300, upload_to='workshops/sponsors/')),
            ],
            options={
                'unique_together': {('name',)},
            },
        ),
        migrations.CreateModel(
            name='WorkshopClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('image', models.ImageField(upload_to='workshops/categories')),
            ],
            options={
                'unique_together': {('name',)},
            },
        ),
        migrations.CreateModel(
            name='Workshop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('date_start', models.DateField()),
                ('date_end', models.DateField()),
                ('password', models.CharField(blank=True, help_text='Enter a password if the user needs a password to register (eg: Closed workshops)', max_length=20, null=True)),
                ('content', tinymce.models.HTMLField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=300, null=True)),
                ('city', models.CharField(blank=True, max_length=300, null=True)),
                ('country', models.CharField(blank=True, max_length=300, null=True)),
                ('registration_open', models.BooleanField(default=False)),
                ('description', models.TextField(null=True)),
                ('admin_emails', models.CharField(default='gisday@ou.edu', max_length=1000)),
                ('registration_message', tinymce.models.HTMLField(blank=True, null=True)),
                ('agenda', models.FileField(blank=True, max_length=300, null=True, upload_to='workshops/agendas/')),
                ('extra_boolean_field1', models.CharField(blank=True, max_length=100, null=True)),
                ('extra_boolean_field2', models.CharField(blank=True, max_length=100, null=True)),
                ('extra_boolean_field3', models.CharField(blank=True, max_length=100, null=True)),
                ('extra_text_field1', models.CharField(blank=True, max_length=100, null=True)),
                ('extra_text_field2', models.CharField(blank=True, max_length=100, null=True)),
                ('extra_text_field3', models.CharField(blank=True, max_length=100, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workshops.WorkshopClass')),
            ],
            options={
                'unique_together': {('name',)},
            },
        ),
        migrations.CreateModel(
            name='WorkshopRegistration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('position', models.CharField(max_length=300)),
                ('institution', models.CharField(max_length=200)),
                ('address', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('area_of_expertise', models.CharField(max_length=300)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('validated', models.BooleanField()),
                ('extra_boolean_field1', models.BooleanField(default=False)),
                ('extra_boolean_field2', models.BooleanField(default=False)),
                ('extra_boolean_field3', models.BooleanField(default=False)),
                ('extra_text_field1', models.CharField(blank=True, max_length=100, null=True)),
                ('extra_text_field2', models.CharField(blank=True, max_length=100, null=True)),
                ('extra_text_field3', models.CharField(blank=True, max_length=100, null=True)),
                ('workshop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workshop', related_query_name='workshop', to='workshops.Workshop')),
            ],
            options={
                'unique_together': {('workshop', 'email')},
            },
        ),
        migrations.CreateModel(
            name='WorkshopPhoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(blank=True, null=True, upload_to='workshops/photos')),
                ('priority', models.PositiveIntegerField(default=99999)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('workshop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workshop_images', to='workshops.Workshop')),
            ],
            options={
                'unique_together': {('workshop', 'image')},
            },
        ),
        migrations.CreateModel(
            name='SponsorInWorkshop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sponsor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workshops.Sponsor')),
                ('workshop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workshops.Workshop')),
            ],
            options={
                'unique_together': {('workshop', 'sponsor')},
            },
        ),
        migrations.CreateModel(
            name='Presentation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('other_presenters', models.CharField(blank=True, max_length=200)),
                ('content', models.FileField(blank=True, max_length=300, null=True, upload_to='workshops/presentations/')),
                ('time_ini', models.DateTimeField()),
                ('time_end', models.DateTimeField(null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workshops.Institution')),
                ('workshop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workshops.Workshop')),
            ],
            options={
                'unique_together': {('workshop', 'time_ini')},
            },
        ),
    ]
