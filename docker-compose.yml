version: '3'
    
services:

  web:
    build: ./app

    #user: eomfuser

    command: bash -c "python manage.py migrate --noinput -v 1 && 
                      echo MIGRATE_FIN &&
                      python manage.py check &&
                      echo CHECK_FIN &&
                      python manage.py makemessages --locale=zh_CN &&
                      echo MAKE_MESSAGE_FIN &&
                      python manage.py compilemessages &&
                      echo COMPILE_MESSAGE_FIN &&
                      gunicorn eomf.wsgi:application --bind 0.0.0.0:8000"
                      
                      #tail -F anything"
                      #gunicorn eomf.wsgi:application --bind 0.0.0.0:8000"
                      #python manage.py runserver 0.0.0.0:8000"

#                     python manage.py makemigrations --empty pages &&

    #TODO: Remove the volume connection in production. There should be no connection between the container and machine in production to avoid attacks on the base machine.
    volumes:
      - ./app:/code
    expose:
      - 8000            
    env_file:
      - ./.env
    depends_on:
      - db
#      - redis



  db:
    image: postgis/postgis

    #user: eomfuser

    volumes:
      - postgres_data:/var/lib/postgresql/data

    env_file:
      - ./.env.db
  



  nginx:
    build:
      context: .
      dockerfile: ./nginx/Dockerfile

    #TODO: Figure out how to avoid containers running as root
    #user: eomfuser

    #TODO: Nginx NEEDS this link to the active files because media files are added during runtime, after docker's copy command. Thus the container doesn't have the new media files.
    volumes: 
      - .:/code

    ports:
      - 80:80
    depends_on:
      - web


#  redis:
#    image: redis:alpine
#
#
#
#  celery:
#    build: ./app
#    command: celery -A eomf worker -l info
#    volumes:
#      - ./app/:/code/
#    
#    #Env variables may be needed here?
#
#    depends_on:
#      - redis

      
volumes:
  postgres_data: